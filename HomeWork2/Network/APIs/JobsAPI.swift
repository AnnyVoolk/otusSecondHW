//
// JobsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

protocol IJobsApiService {
    
    func getJobs(description: String, page: Int?, completion: @escaping ((_ data: [Job]?, _ error: Error?) -> Void))
    func getCurrentJob(id: String, completion: @escaping ((_ data: Job?,_ error: Error?) -> Void))
}

open class JobsAPI: IJobsApiService {
    
    
    func getJobs(description: String, page: Int?, completion: @escaping ((_ data: [Job]?, _ error: Error?) -> Void)) {
        self.getJobsWithRequestBuilder(description: description, page: page).execute(OpenAPIClientAPI.apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }
    
    func getCurrentJob(id: String, completion: @escaping ((_ data: Job?,_ error: Error?) -> Void)) {
           getCurrentJobWithRequestBuilder(id: id).execute(OpenAPIClientAPI.apiResponseQueue) { result -> Void in
               switch result {
               case let .success(response):
                   completion(response.body, nil)
               case let .failure(error):
                   completion(nil, error)
               }
           }
       }
   
    func getJobsWithRequestBuilder(description: String, page: Int? = nil) -> RequestBuilder<[Job]> {
        let path = "/positions.json"
        let URLString = OpenAPIClientAPI.jobBasePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "description": description.encodeToJSON(), 
            "page": page?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<[Job]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    func getCurrentJobWithRequestBuilder(id: String) -> RequestBuilder<Job> {
        let path = "/positions/\(id).json"
        let URLString = OpenAPIClientAPI.jobBasePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Job>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
